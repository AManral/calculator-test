{"uuid":"10dc2dc4-be39-4a8c-adf1-6225b5d1e458","historyId":"16ebf3c9ca3a599f3d9818f1da8d4ce6","fullName":"tests.CalculatorTest.testOperatorHandling","labels":[{"name":"package","value":"tests.CalculatorTest"},{"name":"testClass","value":"tests.CalculatorTest"},{"name":"testMethod","value":"testOperatorHandling"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"calculator-test"},{"name":"subSuite","value":"tests.CalculatorTest"},{"name":"host","value":"Mokshs-MBP.rally.ca"},{"name":"thread","value":"95764@Mokshs-MBP.rally.ca.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"testOperatorHandling","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected [6/-1] but found [6 × -16 ÷ -1]","trace":"java.lang.AssertionError: expected [6/-1] but found [6 × -16 ÷ -1]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:656)\n\tat org.testng.Assert.assertEquals(Assert.java:666)\n\tat tests.CalculatorTest.testOperatorHandling(CalculatorTest.java:100)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:848)\n\tat org.testng.TestRunner.run(TestRunner.java:621)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:443)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:336)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1200)\n\tat org.testng.TestNG.runSuites(TestNG.java:1114)\n\tat org.testng.TestNG.run(TestNG.java:1082)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg2","value":"6/-1"},{"name":"arg1","value":"6/-+1"},{"name":"arg0","value":"No override when using '+' after '/-'"}],"start":1746131772365,"stop":1746131772631}